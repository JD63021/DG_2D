% MESH2 will generate rectangular mesh closely spaced at the corners
function [X,Y] = mesh2(n,m,o)
X = zeros(2*m+1, 2*n+1);
Y = X;

x = zeros(m+1, n+1);
% y = x;
% o = 5;

x1 = linspace(0,1,n+2);% These specify the dimensions
y1 = linspace(0,1*o,m+2);

a1 = -exp((x1-0.5).^2); % Fit a gaussian in both directions
b1 = -exp((y1-0.5*o).^2);
a1 = a1 - a1(1)*ones(1,1:length(a1));
a1 = a1/sum(a1);
b1 = b1 - b1(1)*ones(1,1:length(b1));
b1 = b1/sum(b1);


% normalize to get the x y vues
for i = 1:n+1
   
    x11(1,i) = sum(a1(1:i)); 
end

for i = 1:m+1
    y11(1,i) = sum(b1(1:i));
end

x22 = [0];
for i = 1:n
    x12 = [x11(i) (x11(i+1)+x11(i))/2];
    x22 = [x22 x12];
end
x22(1) = []; x22 = [x22 x11(end)];

y22 = [0];
for i = 1:m
    y12 = [y11(i) (y11(i+1)+y11(i))/2];
    y22 = [y22 y12];
end
y22(1) = []; y22 = [y22 y11(end)];
    

y22 = y22*o;

for i = 1: 2*m+1
    X(i,:) = x22;
end
% 
for i = 1:2*n+1
    Y(:,i) = y22;
end

Y = flipud(Y);
Y = Y;



% x = zeros(2*m+1, 2*n+1);
% y = x;
% 
% x1 = linspace(0,1,2*n+1);
% y1 = linspace(0,5,2*m+1);
% 
% for i = 1: 2*m+1
%     x(i,:) = x1;
% end
% 
% for i = 1:2*n+1
%     y(:,i) = y1;
% end
% 
% y = flipud(y);